#!/usr/bin/python

# Title: QProcess Control via GUI
# Author: Aleksandar Vladimirov Atanasov
# Description: Launches and terminates a detached process using a toggable push button

import sys
import subprocess
from PyQt4 import QtGui, QtCore
from PyQt4.QtCore import QProcess


class Example(QtGui.QWidget):

    
  def __init__(self):
    super(Example, self).__init__()
	  self.command = "./testCommand.py"
	  self.status = False
	  self.pid = 0
	  self.args = [""]
    self.initUI()
        
  def initUI(self):               
    hbox = QtGui.QHBoxLayout()

	  qbtn = QtGui.QPushButton('Start', self)
  	qbtn.setCheckable(True)
	  qbtn.clicked.connect(self.toggleProcess)
	  qbtn.resize(qbtn.sizeHint())
	  hbox.addWidget(qbtn)

	  self.setLayout(hbox)
	  self.setGeometry(300, 300, 250, 150)
	  self.setWindowTitle('QProcess controlled by a button')    
	  self.show()

  def toggleProcess(self, val):
	  if val:
		  print 'Starting process'
		  self.status, self.pid = QProcess.startDetached(self.command, self.args, '.')
		  if self.status:
			  print 'PID: ', self.pid
		  else:
			  print 'Error: Failed to create process!'
	  else:
  		print 'Stopping process'
	  	if self.status:
		  	success = subprocess.call(['kill', '-SIGTERM', str(self.pid)])
			  if success == 0:
				  print 'Process stopped!'
				  self.status = False
				  self.pid = 0
			  else:
  				print 'Error: Failed to stop process!'

def main(): 
    app = QtGui.QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
